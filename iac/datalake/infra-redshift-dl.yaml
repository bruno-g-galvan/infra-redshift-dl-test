AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ProjectName:
    Type: "String"
    # This gets replaced by the build script
    Default: "redshift-dl-test"
  DeploymentBucketName:
    Type: "String"
    # This gets replaced by the build script
    Default: "redshift-dl-test-deployment-${AWS::AccountId}-us-east-1"
    Description: Enter the existing AWS bucket were the artifacts for deployment are uploaded.

Mappings:
  DatalakeStorageMap:
    S3Prefix:
      # RAW
      CDDAChEParquet: "data/parquet/cdd/ache/"
      SFParquetTables: "data/parquet/sf/"
      # CLEAN
  DatalakeCatalogMap:
    GlueDatabaseSuffix:
      Landing: "landing"
      Raw: "raw"
      Clean: "clean"
      Analytics: "analytics"
    GlueTableName:
      # RAW
      CDDAChE: "cdd_ache"
      SFTablesPrefix: "sf"
      # CLEAN

Resources:
  LandingDataBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-data-landing-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  RawDataBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-data-raw-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  CleanDataBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-data-clean-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Prefix: datalake/
            Status: Enabled
            ExpiredObjectDeleteMarker: True
            NoncurrentVersionExpiration:
              NoncurrentDays: 1
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  ArtifactsBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-artifacts-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Prefix: /
            Status: Enabled
            ExpiredObjectDeleteMarker: True
            NoncurrentVersionExpiration:
              NoncurrentDays: 7
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  AthenaResultsBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-athena-results-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldObjects
            Prefix: athena/
            Status: Enabled
            ExpirationInDays: 1
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  GlueTempBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-glue-temp-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldObjects
            Prefix: glue/
            Status: Enabled
            ExpirationInDays: 1
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  ArchiveBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-archive-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  # Glue Data Catalog Databases
  RawGlueDatabase:
    Type: "AWS::Glue::Database"
    Properties:
      DatabaseInput:
        Name: !Sub
          - "${ProjectName}-${Suffix}"
          - Suffix: !FindInMap [DatalakeCatalogMap, GlueDatabaseSuffix, Raw]
      CatalogId: !Ref "AWS::AccountId"

  CleanGlueDatabase:
    Type: "AWS::Glue::Database"
    Properties:
      DatabaseInput:
        Name: !Sub
          - "${ProjectName}-${Suffix}"
          - Suffix: !FindInMap [DatalakeCatalogMap, GlueDatabaseSuffix, Clean]
      CatalogId: !Ref "AWS::AccountId"

  GlueJobCDDAChELanding2Raw:
    Type: AWS::Glue::Job
    Properties:
      Name: !Sub "${ProjectName}-cdd-ache-landing-to-raw-job"
      Role: Glue-Admin-Role
      Command:
        Name: glueetl
        ScriptLocation: !Sub "s3://${ArtifactsBucket}/source/scripts/cdd-ache-landing-2-raw-job.py"
        PythonVersion: 3
      DefaultArguments:
        --TempDir: !Sub "s3://${GlueTempBucket}/glue/${ProjectName}/cdd-ache-landing-2-raw-job/"
        --spark-event-logs-path: !Sub "s3://${GlueTempBucket}/glue/${ProjectName}/cdd-ache-landing-2-raw-job/sparkHistoryLogs/"
        --job-language: python
        --job-bookmark-option: job-bookmark-disable
        --enable-metrics: true
        --enable-continuous-cloudwatch-log: true
        --enable-spark-ui: true
        --enable-glue-datacatalog: ""
        --S3_RAW_BUCKET_NAME: !Ref RawDataBucket
        --S3_TARGET_PREFIX:
          !FindInMap [DatalakeStorageMap, S3Prefix, CDDAChEParquet]
        --CATALOG_RAW_DB_NAME: !Ref RawGlueDatabase
        --CATALOG_TARGET_TABLE_NAME:
          !FindInMap [DatalakeCatalogMap, GlueTableName, CDDAChE]
      ExecutionClass: FLEX
      WorkerType: G.1X
      NumberOfWorkers: 2
      GlueVersion: 4.0
      MaxRetries: 0
      Timeout: 30

